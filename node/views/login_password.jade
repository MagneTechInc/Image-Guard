extends layout

block content
    script.
        window.onload = onReady;

        var can;
        var ctx;
        var img;
        var clickX;
        var clickY;
        var selected1;
        var selected2;
        var blockSize = 160;
        var piecesArray = new Array();

        var can1;
        var ctx1;
        var piecesArray1 = new Array();

        var col = 2;
        var row = 2;

        var correctOrder = new Array();
        var position = new Array();
        var sequence = new Array();



        function onReady() {
            can = document.getElementById('myCanvas');
            can1 = document.getElementById('yourCanvas')

            if (navigator.userAgent.toLowerCase().indexOf('firefox') >= 0 || !can.getContext) {
                can.style.display = 'none';
                can1.style.display = 'none';
                document.getElementById('sorry').style.display = 'inline';
                return;
            }

            ctx = can.getContext('2d');
            ctx1 = can1.getContext('2d');
            img = new Image();
            img.onload = onImage1Load;
            img.src = "#{img_path}";
        }

        function onImage1Load() {
            var r;
            for (var i = 0; i < col; i++) {
                for (var j = 0; j < row; j++) {
                    r = new Rectangle(i * blockSize, j * blockSize, i * blockSize + blockSize, j * blockSize + blockSize);
                    piecesArray.push(r);
                    correctOrder.push(r);
                    position.push(i*row+j);
                }
            }

            scrambleArray(piecesArray, 30);
            drawImage();
        }

        function Rectangle(left, top, right, bottom) {
            this.left = left;
            this.top = top;
            this.right = right;
            this.bottom = bottom;

            this.width = right - left;
            this.height = bottom - top;
        }

        function scrambleArray(ar, times) {
            var count = 0;
            var temp;
            var index1;
            var index2;

            while (count < times) {
                index1 = Math.floor(Math.random() * piecesArray.length);
                index2 = Math.floor(Math.random() * piecesArray.length);

                temp = piecesArray[index1];
                piecesArray[index1] = piecesArray[index2];
                piecesArray[index2] = temp;

                temp = position[index1];
                position[index1] = position[index2];
                position[index2] = temp;

                count++;
            }
        }

        function drawImage() {
            var r;
            for (var i = 0; i < col; i++) {
                for (var j = 0; j < row; j++) {
                    r = piecesArray[i * row + j];
                    if (r != undefined)
                    {
                        ctx.drawImage(img, r.left, r.top, r.width, r.height, i * blockSize, j * blockSize, blockSize, blockSize);
                    }
                    r = piecesArray1[i * row + j];
                    if (r != undefined)
                    {
                        ctx1.drawImage(img, r.left, r.top, r.width, r.height, i * blockSize, j * blockSize, blockSize, blockSize);
                    }
                }
            }
        }

        function highlightRect(drawX, drawY) {
            ctx.beginPath();
            ctx.moveTo(drawX, drawY);
            ctx.lineTo(drawX + blockSize, drawY);
            ctx.lineTo(drawX + blockSize, drawY + blockSize);
            ctx.lineTo(drawX, drawY + blockSize);
            ctx.lineTo(drawX, drawY);
            ctx.lineWidth = 2;

            // set line color
            ctx.strokeStyle = "#ff0000";
            ctx.stroke();
        }

        function swapRects(r1, r2) {
            var index1;
            var index2;
            var temp = r1;

            index1 = piecesArray.indexOf(r1);
            index2 = piecesArray.indexOf(r2);

            piecesArray[index1] = r2;
            piecesArray[index2] = temp;

            temp = position[index1];
            position[index1] = position[index2];
            position[index2] = temp;
        }

        function onCanvasClick(evt) {
            clickX = evt.offsetX;
            clickY = evt.offsetY;

            var drawX = Math.floor(clickX / blockSize);
            var drawY = Math.floor(clickY / blockSize);
            var index = drawX * row + drawY;
            var targetRect = piecesArray[index];

            if (targetRect != undefined)
            {
                var drawHighlight = true;

                drawX *= blockSize;
                drawY *= blockSize;

                ctx.clearRect(0, 0, 320, 320);
                ctx1.clearRect(0, 0, 320, 320);

                if (selected1 != undefined && selected2 != undefined) {
                    selected1 = selected2 = undefined;
                }

                if (selected1 == undefined) {
                    selected1 = targetRect;
                }
                else {
                    selected2 = targetRect;
                    swapRects(selected1, selected2);
                    drawHighlight = false;
                }

                drawImage();

                if (drawHighlight)
                    highlightRect(drawX, drawY);
            }
        }

        function onCanvasClick1(evt) {
            clickX = evt.offsetX;
            clickY = evt.offsetY;

            var drawX = Math.floor(clickX / blockSize);
            var drawY = Math.floor(clickY / blockSize);
            var index = drawX * row + drawY;
            var targetRect = piecesArray1[index];

            if (targetRect == undefined) {

                drawX *= blockSize;
                drawY *= blockSize;

                ctx.clearRect(0, 0, 320, 320);
                ctx1.clearRect(0, 0, 320, 320)

                if (selected1 != undefined) {
                    if (selected2 == undefined)
                    {
                        var index1 = piecesArray.indexOf(selected1);
                        piecesArray[index1] = undefined;
                        piecesArray1[index] = selected1;
                        selected1 = undefined;
                        sequence.push(position[index1]);
                        isWin();
                    }
                }

                drawImage();
            }

        }

        function isWin(){
            var match = true;
            var isEmpty = true;

            for(var i=0; i<piecesArray.length; i++)
            {
                if(piecesArray[i] != undefined)
                {
                    isEmpty = false;
                    break;
                }
            }

            for(var i=0; i<piecesArray.length; i++)
            {
                if(piecesArray1[i] != correctOrder[i])
                {
                    match = false;
                    break;
                }
            }

            if(match)
            {
                alert("puzzle complete\nSending sequence (" + sequence +") to back end");
                var password = "";
                for(var i=0; i<sequence.length; i++)
                {
                    password += sequence[i];
                }
                $.ajax({
                    url: "/users/login_password",
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        username: "#{username}",
                        password: password
                    },
                    success: function(data)
                    {
                        debugger;
                        window.location.replace('/');
                    },
                    error: function(error)
                    {
                        alert(error.status);
                    }
                });

            }
            else if(isEmpty)
            {
                alert("lose puzzle game\nif attemp is less than 3, refresh page");
            }
            else
            {
                console.log("not complete yet");
            }

        }
    div(class="panel panel-default" style="text-align:center")
        div(class="panel-heading")
            h1 Login
        div(class="panel-body")
            div(class="container-fluid")
                div(class="row")
                    div(class="col-sm-6")
                        img(id="sorry" src="/images/sorry.jpg" style="display:none;")
                        canvas(id="myCanvas" width="320" height="320" style="margin:0 auto; width:320px; height:320px; border: 4px solid #cc6699;" onclick="onCanvasClick(event);")
                    div(class="col-sm-6")
                        canvas(id="yourCanvas" width="320" height="320" style="margin:0 auto; width:320px; height:320px; border: 4px solid #cc6699;" onclick="onCanvasClick1(event);")